(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["@ostendis/grapesjs-preset-ostendis-simple"] = factory();
	else
		root["@ostendis/grapesjs-preset-ostendis-simple"] = factory();
})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/blocks.ts":
/*!***********************!*\
  !*** ./src/blocks.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(editor, opts) {
    var Blocks = editor.Blocks;
    var addBlock = function (id, blockDef) {
        opts.blocks.indexOf(id) >= 0 &&
            editor.Blocks.add(id, __assign(__assign({ select: true }, blockDef), opts.block(id)));
    };
    Blocks.getAll().reset();
}


/***/ }),

/***/ "./src/commands.ts":
/*!*************************!*\
  !*** ./src/commands.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consts */ "./src/consts.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (editor, opts) { return __awaiter(void 0, void 0, void 0, function () {
    var Commands;
    return __generator(this, function (_a) {
        Commands = editor.Commands;
        Commands.add(_consts__WEBPACK_IMPORTED_MODULE_0__.cmdDeviceDesktop, {
            run: function (ed) { return ed.setDevice("Desktop"); },
            stop: function () { },
        });
        Commands.add(_consts__WEBPACK_IMPORTED_MODULE_0__.cmdDeviceTablet, {
            run: function (ed) { return ed.setDevice("Tablet"); },
            stop: function () { },
        });
        Commands.add(_consts__WEBPACK_IMPORTED_MODULE_0__.cmdDeviceMobile, {
            run: function (ed) { return ed.setDevice("Mobile portrait"); },
            stop: function () { },
        });
        return [2 /*return*/];
    });
}); });


/***/ }),

/***/ "./src/components.ts":
/*!***************************!*\
  !*** ./src/components.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consts */ "./src/consts.ts");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (editor, opts) {
    var DomComponents = editor.DomComponents;
    // Add ostendis block trait to video components
    var dType = DomComponents.getType("video");
    var dModel = dType === null || dType === void 0 ? void 0 : dType.model;
    var dView = dType === null || dType === void 0 ? void 0 : dType.view;
    var yt = "yt";
    var vi = "vi";
    var ytnc = "ytnc";
    DomComponents.addType("video", {
        model: dModel.extend({
            updateTraits: function () {
                var em = this.em;
                var prov = this.get("provider");
                var tagName = "iframe";
                var traits;
                switch (prov) {
                    case yt:
                    case ytnc:
                        traits = this.getYoutubeTraits();
                        break;
                    case vi:
                        traits = this.getVimeoTraits();
                        break;
                    default:
                        tagName = "video";
                        traits = this.getSourceTraits();
                }
                traits.push({
                    type: "select",
                    label: "Ostendis Blocks",
                    name: "data-ost-type",
                    options: [
                        { id: "", name: opts.t9n.traitOstNone },
                        { id: "videoURL", name: opts.t9n.traitOstVideoURL },
                    ],
                });
                this.set({ tagName: tagName }, { silent: true }); // avoid break in view
                this.set({ traits: traits });
                em.get("ready") && em.trigger("component:toggled");
            },
        }),
        view: dView,
    });
    // Scale the new range
    DomComponents.addType("scale", {
        isComponent: function (el) { return el.tagName === "DIV" && el.classList.contains("scale"); },
        model: {
            defaults: {
                tagName: "div",
                attributes: {
                    class: "scale",
                    "data-percent": "66",
                    "data-fcolor": "#3b5998",
                    "data-bgcolor": "#CCCCCC",
                },
                style: {
                    "box-sizing": "border-box",
                    padding: "0",
                    height: "20px",
                    "max-width": "100%",
                    border: "0px solid #666666",
                    background: "linear-gradient(to right,#3b5998 66%, #CCCCCC 66%);",
                },
                traits: [
                    {
                        name: "percent",
                        type: "number",
                        min: 0,
                        max: 100,
                        label: opts.t9n.labelScalePercent,
                        changeProp: true,
                    },
                    {
                        name: "fcolor",
                        type: "color",
                        label: opts.t9n.labelScaleBarColor,
                        placeholder: "#222222",
                        changeProp: true,
                    },
                    {
                        name: "bgcolor",
                        type: "color",
                        label: opts.t9n.labelScaleBgColor,
                        placeholder: "#cccccc",
                        changeProp: true,
                    },
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeHideInSimpleHtmlTrait)(opts),
                ],
            },
            init: function () {
                var scaleAttr = this.getAttributes();
                this.set("percent", scaleAttr["data-percent"]);
                this.set("bgcolor", scaleAttr["data-bgcolor"]);
                this.set("fcolor", scaleAttr["data-fcolor"]);
                this.on("change:percent", this.updateScale);
                this.on("change:bgcolor", this.updateScale);
                this.on("change:fcolor", this.updateScale);
            },
            updateScale: function () {
                var p = this.get("percent");
                var b = this.get("bgcolor");
                var f = this.get("fcolor");
                this.set("attributes", {
                    "data-percent": p,
                    "data-bgcolor": b,
                    "data-fcolor": f,
                });
                this.addStyle({
                    background: "linear-gradient(to right, " +
                        f +
                        " " +
                        p +
                        "%, " +
                        b +
                        " " +
                        p +
                        "%)",
                });
            },
        },
    });
    // INPUT
    DomComponents.addType("range", {
        isComponent: function (el) { return el.tagName == "INPUT"; },
        model: {
            defaults: {
                tagName: "input",
                droppable: true,
                highlightable: true,
                traits: [_consts__WEBPACK_IMPORTED_MODULE_0__.nameTrait, _consts__WEBPACK_IMPORTED_MODULE_0__.valueTrait],
                attributes: { type: "range", disabled: true },
            },
        },
        extendFnView: ["updateAttributes"],
        view: {
            updateAttributes: function () {
                this.el.setAttribute("autocomplete", "on");
            },
        },
    });
    // Unsorted list item component
    DomComponents.addType("ulistitem", {
        isComponent: function (el) {
            if (el.tagName === "LI" && el.classList.contains("ulistitem")) {
                return { type: "ulistitem" };
            }
        },
        model: {
            defaults: {
                tagName: "li",
                draggable: "ul",
                attributes: { class: "ulistitem" },
                style: { "text-align": "left" },
                components: _consts__WEBPACK_IMPORTED_MODULE_0__.uListItemContent,
                traits: ["id", "title", (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeTextTrait)(opts)],
            },
        },
    });
    // Unsorted list component with fontawesome
    DomComponents.addType("ulist", {
        isComponent: function (el) {
            if (el.tagName === "UL" && el.classList.contains("ulist")) {
                return { type: "ulist" };
            }
        },
        model: {
            defaults: {
                tagName: "ul",
                attributes: { class: "ulist fa-ul" },
                style: {
                    padding: "0.2em 0",
                    "margin-left": "2em",
                    "line-height": "1.4em",
                },
                components: _consts__WEBPACK_IMPORTED_MODULE_0__.ulListItem + _consts__WEBPACK_IMPORTED_MODULE_0__.ulListItem + _consts__WEBPACK_IMPORTED_MODULE_0__.ulListItem,
                traits: [
                    "id",
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeTextTrait)(opts),
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeHideInSimpleHtmlTrait)(opts),
                ],
            },
        },
    });
    // Header component
    DomComponents.addType("header", {
        isComponent: function (el) {
            var headings = ["h1", "h2", "h3", "h4", "h5", "h6"];
            if (el.tagName && headings.includes(el.tagName.toLowerCase())) {
                return { type: "header" };
            }
        },
        extend: "text",
        model: {
            defaults: {
                tagName: "h1", //Default
                traits: [
                    "id",
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeTextTrait)(opts),
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeHideInSimpleHtmlTrait)(opts),
                ],
            },
        },
    });
    // Icon component
    DomComponents.addType("icon", {
        isComponent: function (el) {
            var classNames = [
                "fa",
                "fas",
                "far",
                "fab",
                "fa-solid",
                "fa-regular",
                "fa-brands",
            ];
            if (el.tagName === "I" &&
                classNames.some(function (className) { return el.classList.contains(className); })) {
                return { type: "icon" };
            }
        },
        model: {
            defaults: {
                tagName: "i",
                attributes: { class: "fas fa-star" },
                draggable: false,
                droppable: false,
                removable: false,
                copyable: false,
                traits: [(0,_consts__WEBPACK_IMPORTED_MODULE_0__.iconTrait)(opts), (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeHideInSimpleHtmlTrait)(opts)],
            },
        },
    });
    // Add ostendis type trait to table components
    DomComponents.addType("table", {
        model: {
            defaults: {
                traits: [
                    "id",
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeTextTrait)(opts),
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeHideInSimpleHtmlTrait)(opts),
                ],
            },
        },
    });
    // Add ostendis type trait to link components
    DomComponents.addType("link", {
        model: {
            defaults: {
                traits: [
                    "id",
                    "href",
                    "target",
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeTextTrait)(opts),
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeHideInSimpleHtmlTrait)(opts),
                ],
            },
        },
    });
    // Add ostendis type trait to image components
    DomComponents.addType("image", {
        model: {
            defaults: {
                traits: [
                    "id",
                    "alt",
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeImageTrait)(opts),
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeHideInSimpleHtmlTrait)(opts),
                ],
            },
        },
    });
    // Add ostendis type trait to text components
    DomComponents.addType("textnode", {
        model: {
            defaults: {
                traits: [
                    "id",
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeTextTrait)(opts),
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeHideInSimpleHtmlTrait)(opts),
                ],
            },
        },
    });
    // Add ostendis type trait to text components
    DomComponents.addType("text", {
        model: {
            defaults: {
                traits: [
                    "id",
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeTextTrait)(opts),
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeHideInSimpleHtmlTrait)(opts),
                ],
            },
        },
    });
    // Add ostendis type trait to default components
    DomComponents.addType("default", {
        model: {
            defaults: {
                traits: [
                    "id",
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeTextTrait)(opts),
                    (0,_consts__WEBPACK_IMPORTED_MODULE_0__.ostTypeHideInSimpleHtmlTrait)(opts),
                ],
            },
        },
    });
});


/***/ }),

/***/ "./src/consts.ts":
/*!***********************!*\
  !*** ./src/consts.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   cmdDeviceDesktop: () => (/* binding */ cmdDeviceDesktop),
/* harmony export */   cmdDeviceMobile: () => (/* binding */ cmdDeviceMobile),
/* harmony export */   cmdDeviceTablet: () => (/* binding */ cmdDeviceTablet),
/* harmony export */   iconTrait: () => (/* binding */ iconTrait),
/* harmony export */   nameTrait: () => (/* binding */ nameTrait),
/* harmony export */   ostTypeHideInSimpleHtmlTrait: () => (/* binding */ ostTypeHideInSimpleHtmlTrait),
/* harmony export */   ostTypeImageTrait: () => (/* binding */ ostTypeImageTrait),
/* harmony export */   ostTypeTextTrait: () => (/* binding */ ostTypeTextTrait),
/* harmony export */   uListItemContent: () => (/* binding */ uListItemContent),
/* harmony export */   ulListItem: () => (/* binding */ ulListItem),
/* harmony export */   valueTrait: () => (/* binding */ valueTrait)
/* harmony export */ });
/* harmony import */ var _ostTranslations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ostTranslations */ "./src/ostTranslations.ts");

var cmdDeviceDesktop = "set-device-desktop";
var cmdDeviceTablet = "set-device-tablet";
var cmdDeviceMobile = "set-device-mobile";
var nameTrait = {
    name: "name",
};
var valueTrait = {
    name: "value",
    label: _ostTranslations__WEBPACK_IMPORTED_MODULE_0__.ostTrans.traitBlkValue,
};
var uListItemContent = "\n    <span class=\"fa-li\" style=\"left:-2em;width:2em;\" draggable=\"false\" removable=\"false\" editable=\"false\" copyable=\"false\">\n      <i class=\"fas fa-circle\" data-gjs-type=\"icon\" style=\"font-size:0.4em;line-height:inherit;display:block;\" draggable=\"false\" removable=\"false\" editable=\"false\" copyable=\"false\"></i>\n    </span>\n    <p style=\"margin:0;padding:0;text-align:left;\" draggable=\"false\" removable=\"false\" copyable=\"false\">Text</p>";
var ulListItem = "<li style=\"text-align:left\" data-gjs-type=\"ulistitem\">" +
    uListItemContent +
    "</li>";
// Define ostendis type trait for text and default components
function ostTypeTextTrait(opts) {
    return {
        type: "ost-blocks-select",
        label: "Ostendis Blocks",
        name: "data-ost-type",
        attributes: {
            "data-tooltip": opts.t9n.traitBlkOstendisTooltip,
            "data-tooltip-pos": "bottom",
        },
        options: [
            { id: "", name: opts.t9n.traitOstNone },
            { id: "organizationHeading", name: opts.t9n.traitOstOrganizationHeading },
            { id: "organization", name: opts.t9n.traitOstOrganization },
            { id: "introductionHeading", name: opts.t9n.traitOstIntroductionHeading },
            { id: "introduction", name: opts.t9n.traitOstIntroduction },
            { id: "descriptionHeading", name: opts.t9n.traitOstDescriptionHeading },
            { id: "description", name: opts.t9n.traitOstDescription },
            { id: "tasksHeading", name: opts.t9n.traitOstTasksHeading },
            { id: "tasks", name: opts.t9n.traitOstTasks },
            { id: "requirementsHeading", name: opts.t9n.traitOstRequirementsHeading },
            { id: "requirements", name: opts.t9n.traitOstRequirements },
            { id: "benefitsHeading", name: opts.t9n.traitOstBenefitsHeading },
            { id: "benefits", name: opts.t9n.traitOstBenefits },
            { id: "contactHeading", name: opts.t9n.traitOstContactHeading },
            { id: "contact", name: opts.t9n.traitOstContact },
            { id: "calltoaction", name: opts.t9n.traitOstCallToAction },
        ],
    };
}
// Define ostendis type trait for images
function ostTypeImageTrait(opts) {
    return {
        type: "ost-blocks-select",
        label: "Ostendis Blocks",
        name: "data-ost-type",
        attributes: {
            "data-tooltip": opts.t9n.traitBlkOstendisTooltip,
            "data-tooltip-pos": "bottom",
        },
        options: [
            { id: "", name: opts.t9n.traitOstNone },
            { id: "logoPicURL", name: opts.t9n.traitOstLogoPicURL },
            { id: "headerPic1URL", name: opts.t9n.traitOstHeaderPic1URL },
            { id: "headerPic2URL", name: opts.t9n.traitOstHeaderPic2URL },
            { id: "headerPic3URL", name: opts.t9n.traitOstHeaderPic3URL },
            { id: "footerPic1URL", name: opts.t9n.traitOstFooterPic1URL },
            { id: "footerPic2URL", name: opts.t9n.traitOstFooterPic2URL },
            { id: "footerPic3URL", name: opts.t9n.traitOstFooterPic3URL },
            { id: "additionalPic1URL", name: opts.t9n.traitOstAdditionalPic1URL },
            { id: "additionalPic2URL", name: opts.t9n.traitOstAdditionalPic2URL },
            { id: "additionalPic3URL", name: opts.t9n.traitOstAdditionalPic3URL },
        ],
    };
}
// Define ostendis type "hide in simple html"
function ostTypeHideInSimpleHtmlTrait(opts) {
    return {
        type: "checkbox",
        label: opts.t9n.hideInSimpleHtmlLabel,
        name: "data-ost-simple-hide",
        attributes: {
            "data-tooltip": opts.t9n.hideInSimpleHtmlTooltip,
            "data-tooltip-pos": "bottom",
        },
        valueTrue: "1",
        valueFalse: "",
    };
}
// Define ostendis type trait for icons
function iconTrait(opts) {
    return {
        type: "select",
        label: "Icon",
        name: "class",
        attributes: {
            id: "select-fontawesome",
            "data-tooltip": opts.t9n.labelIconTooltip,
            "data-tooltip-pos": "bottom",
        },
        options: [
            { id: "fas fa-minus", name: opts.t9n.labelIconSelectMinus },
            { id: "fas fa-circle", name: opts.t9n.labelIconSelectCircleSolid },
            { id: "far fa-circle", name: opts.t9n.labelIconSelectCircle },
            { id: "fas fa-check", name: opts.t9n.labelIconSelectCheck },
            { id: "fas fa-square", name: opts.t9n.labelIconSelectSquare },
            { id: "fas fa-arrow-right", name: opts.t9n.labelIconSelectArrowRight },
            { id: "fas fa-check-circle", name: opts.t9n.labelIconSelectCheckCircle },
            { id: "far fa-clock", name: opts.t9n.labelIconSelectClock },
            { id: "fas fa-percent", name: opts.t9n.labelIconSelectPercent },
            { id: "far fa-building", name: opts.t9n.labelIconSelectBuilding },
            { id: "fas fa-home", name: opts.t9n.labelIconSelectHome },
            { id: "fas fa-globe", name: opts.t9n.labelIconSelectGlobe },
            { id: "far fa-file", name: opts.t9n.labelIconSelectFile },
            { id: "fas fa-utensils", name: opts.t9n.labelIconSelectUtensils },
            { id: "far fa-calendar-alt", name: opts.t9n.labelIconSelectCalendar },
            { id: "far fa-hourglass", name: opts.t9n.labelIconSelectHourglass },
            { id: "fas fa-map-marker-alt", name: opts.t9n.labelIconSelectMapMarker },
            { id: "fas fa-road", name: opts.t9n.labelIconSelectRoad },
            { id: "fas fa-coffee", name: opts.t9n.labelIconSelectCoffee },
            { id: "fas fa-phone", name: opts.t9n.labelIconSelectPhone },
            { id: "fas fa-envelope", name: opts.t9n.labelIconSelectEnvelope },
            { id: "fas fa-star", name: opts.t9n.labelIconSelectStar },
        ],
    };
}


/***/ }),

/***/ "./src/ostTranslations.ts":
/*!********************************!*\
  !*** ./src/ostTranslations.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ostTrans: () => (/* binding */ ostTrans)
/* harmony export */ });
var ostTrans = {
    cmdBtnDesktopLabel: "Desktop",
    cmdBtnTabletLabel: "Tablet",
    cmdBtnMobileLabel: "Mobile",
    cmdBtnViewCompLabel: "View components",
    cmdBtnUndoLabel: "Undo",
    cmdBtnRedoLabel: "Redo",
    openTraits: "Open Parameter",
    categoryLabel: "Basic",
    smSitesCategoryLabel: "Social media sites",
    smSharesCategoryLabel: "Social media shares",
    sharesCategoryLabel: "Shares",
    traitBlkValue: "Value",
    traitHeaderLabel: "Header Level",
    traitHeaderSelectH1: "H1 (highest)",
    traitHeaderSelectH2: "H2",
    traitHeaderSelectH3: "H3",
    traitHeaderSelectH4: "H4",
    traitHeaderSelectH5: "H5",
    traitHeaderSelectH6: "H6 (lowest)",
    traitBlkOstendisTooltip: "Define Ostendis block.",
    traitOstNone: "None",
    traitOstOrganizationHeading: "Organization Heading",
    traitOstOrganization: "Organization",
    traitOstIntroductionHeading: "Introduction Heading",
    traitOstIntroduction: "Introduction",
    traitOstDescriptionHeading: "Description Heading",
    traitOstDescription: "Description",
    traitOstTasksHeading: "Tasks Heading",
    traitOstTasks: "Tasks",
    traitOstRequirementsHeading: "Requirements Heading",
    traitOstRequirements: "Requirements",
    traitOstBenefitsHeading: "Benefits Heading",
    traitOstBenefits: "Benefits",
    traitOstContactHeading: "Contact Heading",
    traitOstContact: "Contact",
    traitOstCallToAction: "Call to action",
    traitOstLogoPicURL: "Logo Image",
    traitOstHeaderPic1URL: "Header Image 1",
    traitOstHeaderPic2URL: "Header Image 2",
    traitOstHeaderPic3URL: "Header Image 3",
    traitOstFooterPic1URL: "Footer Image 1",
    traitOstFooterPic2URL: "Footer Image 2",
    traitOstFooterPic3URL: "Footer Image 3",
    traitOstAdditionalPic1URL: "Additional Image 1",
    traitOstAdditionalPic2URL: "Additional Image 2",
    traitOstAdditionalPic3URL: "Additional Image 3",
    traitOstVideoURL: "Video",
    hideInSimpleHtmlLabel: "Hide",
    hideInSimpleHtmlTooltip: "Hide element in simple HTML (jobs.ch)",
    labelIconTooltip: "For more icons: change class name in style manager.",
    labelIconSelectMinus: "minus",
    labelIconSelectCircleSolid: "circle solid",
    labelIconSelectCircle: "circle",
    labelIconSelectCheck: "check",
    labelIconSelectSquare: "square",
    labelIconSelectArrowRight: "arrow right",
    labelIconSelectCheckCircle: "check circle",
    labelIconSelectClock: "clock",
    labelIconSelectPercent: "percent",
    labelIconSelectBuilding: "building",
    labelIconSelectHome: "home",
    labelIconSelectGlobe: "globe",
    labelIconSelectFile: "file",
    labelIconSelectUtensils: "utensils",
    labelIconSelectCalendar: "calendar",
    labelIconSelectHourglass: "hourglass",
    labelIconSelectMapMarker: "map marker",
    labelIconSelectRoad: "road",
    labelIconSelectCoffee: "coffee",
    labelIconSelectPhone: "phone",
    labelIconSelectEnvelope: "envelope",
    labelIconSelectStar: "star",
    labelScalePercent: "Percent",
    labelScaleBarColor: "Color 1",
    labelScaleBgColor: "Color 2",
    ostToolbarClone: "Clone list element",
    ostToolbarDelete: "Delete list element",
    ostToolbarUp: "Move list element up",
    ostToolbarDown: "Move list element down",
    cmdRteRemoveFormat: "Remove format",
};


/***/ }),

/***/ "./src/panels.ts":
/*!***********************!*\
  !*** ./src/panels.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consts */ "./src/consts.ts");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (editor, opts) {
    var Panels = editor.Panels;
    var openTraits = "open-tm";
    var activateOutline = "sw-visibility";
    // Turn off default devices select and create new one
    editor.getConfig().showDevices = false;
    Panels.getPanels().reset([
        {
            id: "commands",
            buttons: [{}],
        },
        {
            id: "devices-c",
            buttons: [
                {
                    id: _consts__WEBPACK_IMPORTED_MODULE_0__.cmdDeviceDesktop,
                    command: _consts__WEBPACK_IMPORTED_MODULE_0__.cmdDeviceDesktop,
                    className: "fa-solid fa-desktop",
                    attributes: {
                        "data-tooltip": opts.t9n.cmdBtnDesktopLabel,
                        "data-tooltip-pos": "bottom",
                    },
                    active: true,
                },
                {
                    id: _consts__WEBPACK_IMPORTED_MODULE_0__.cmdDeviceTablet,
                    command: _consts__WEBPACK_IMPORTED_MODULE_0__.cmdDeviceTablet,
                    className: "fa-solid fa-tablet-screen-button",
                    attributes: {
                        "data-tooltip": opts.t9n.cmdBtnTabletLabel,
                        "data-tooltip-pos": "bottom",
                    },
                },
                {
                    id: _consts__WEBPACK_IMPORTED_MODULE_0__.cmdDeviceMobile,
                    command: _consts__WEBPACK_IMPORTED_MODULE_0__.cmdDeviceMobile,
                    className: "fa-solid fa-mobile-screen-button",
                    attributes: {
                        "data-tooltip": opts.t9n.cmdBtnMobileLabel,
                        "data-tooltip-pos": "bottom",
                    },
                },
            ],
        },
        {
            id: "options",
            buttons: [
                {
                    id: activateOutline,
                    command: activateOutline,
                    context: activateOutline,
                    className: "fa-solid fa-border-none",
                    attributes: {
                        "data-tooltip": opts.t9n.cmdBtnViewCompLabel,
                        "data-tooltip-pos": "bottom",
                    },
                },
                {
                    id: "undo",
                    command: "core:undo",
                    className: "fa-solid fa-rotate-left",
                    attributes: {
                        "data-tooltip": opts.t9n.cmdBtnUndoLabel,
                        "data-tooltip-pos": "bottom",
                    },
                },
                {
                    id: "redo",
                    command: "core:redo",
                    className: "fa-solid fa-rotate-right",
                    attributes: {
                        "data-tooltip": opts.t9n.cmdBtnRedoLabel,
                        "data-tooltip-pos": "bottom",
                    },
                },
            ],
        },
        {
            id: "views",
            buttons: [
                {
                    id: openTraits,
                    command: openTraits,
                    togglable: false,
                    className: "fa-solid fa-gear",
                    attributes: {
                        "data-tooltip": opts.t9n.openTraits,
                        "data-tooltip-pos": "bottom",
                    },
                },
            ],
        },
    ]);
    // Do stuff on load
    editor.onReady(function () {
        if (opts.showOutlineOnLoad) {
            var btn = Panels.getButton("options", activateOutline);
            btn === null || btn === void 0 ? void 0 : btn.set("active", true);
        }
        if (opts.showTraitsOnLoad) {
            var btn = Panels.getButton("views", openTraits);
            btn === null || btn === void 0 ? void 0 : btn.set("active", true);
        }
        //Beautify tooltips
        document.querySelectorAll("*[data-tooltip-pos]").forEach(function (el) {
            var _a;
            var title = (_a = el.getAttribute("title")) === null || _a === void 0 ? void 0 : _a.trim();
            if (title) {
                el.setAttribute("data-tooltip", title);
                el.removeAttribute("title");
            }
        });
    });
});


/***/ }),

/***/ "./src/rte.ts":
/*!********************!*\
  !*** ./src/rte.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (editor, opts) { return __awaiter(void 0, void 0, void 0, function () {
    var RichTextEditor;
    return __generator(this, function (_a) {
        RichTextEditor = editor.RichTextEditor;
        RichTextEditor.add("removeFormat", {
            icon: '<i class="fa-solid fa-text-slash"></i>',
            attributes: { title: opts.t9n.cmdRteRemoveFormat },
            result: function (rte) { return rte.exec("removeFormat"); },
        });
        return [2 /*return*/];
    });
}); });


/***/ }),

/***/ "./src/traits.ts":
/*!***********************!*\
  !*** ./src/traits.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (editor, opts) {
    var TraitManager = editor.TraitManager;
    // Ostendis-Blocks trait
    TraitManager.addType("ost-blocks-select", {
        createInput: function (_a) {
            var trait = _a.trait;
            var traitOpts = trait.get("options") || [];
            var traitName = trait.get("name") || "ost-block-select";
            var options = traitOpts.length
                ? traitOpts
                : [{ id: "", name: "None", disabled: "disabled" }];
            var el = document.createElement("div");
            el.innerHTML = "\n        <select class=\"ost-blocks-select\" id=\"".concat(traitName, "\">\n          ").concat(options
                .map(function (opt) {
                return "<option value=\"".concat(opt.id, "\" ").concat(opt.disabled, ">").concat(opt.name, "</option>");
            })
                .join(""), "\n        </select>\n        <div class=\"gjs-sel-arrow\">\n          <div class=\"gjs-d-s-arrow\"></div>\n        </div>");
            return el;
        },
        onEvent: function (_a) {
            var _b;
            var elInput = _a.elInput, component = _a.component, trait = _a.trait;
            var traitName = trait.get("name") || "ost-block-select-default";
            var element = elInput.querySelector("#" + [traitName]);
            var dataOstType = element.value;
            if (dataOstType == "") {
                component.removeAttributes(traitName);
            }
            else {
                component.addAttributes((_b = {}, _b[traitName] = dataOstType, _b));
            }
            updateTrait(element);
        },
        onUpdate: function (_a) {
            var elInput = _a.elInput, component = _a.component, trait = _a.trait;
            var traitName = trait.get("name") || "ost-block-select-default";
            if (elInput !== null) {
                var element = elInput.querySelector("#" + [traitName]);
                updateTrait(element);
                // Set select
                var dataOstType = component.getAttributes()[traitName] || "";
                element = elInput.querySelector("#" + [traitName]);
                element.value = dataOstType;
            }
        },
    });
    // Range trait
    TraitManager.addType("value", {
        label: opts.t9n.traitBlkValue,
        min: 0, // Minimum number value
        max: 100, // Maximum number value
        events: {
            keyup: "onChange",
        },
        onValueChange: function () {
            var _a;
            var _b = this, model = _b.model, target = _b.target;
            var optionsStr = model.get("value").trim();
            var options = optionsStr.split("\n");
            var optComps = [];
            for (var i = 0; i < options.length; i++) {
                var optionStr = options[i];
                var option = optionStr.split("::");
                optComps.push({
                    type: "range",
                    components: option[1] || option[0],
                    attributes: { value: option[0] },
                });
            }
            target.components().reset(optComps);
            (_a = target === null || target === void 0 ? void 0 : target.view) === null || _a === void 0 ? void 0 : _a.render();
        },
    });
    function updateTrait(element) {
        var _a;
        // Set Array to 0
        opts.usedOstBlocks.forEach(function (el) {
            el.count = 0;
        });
        var wrapper = editor.DomComponents.getWrapper();
        var elements = (_a = wrapper === null || wrapper === void 0 ? void 0 : wrapper.view) === null || _a === void 0 ? void 0 : _a.$el.find("[data-ost-type]").get();
        // List all data-ost-type
        elements === null || elements === void 0 ? void 0 : elements.forEach(function (element) {
            var type = element.getAttribute("data-ost-type") || "";
            var index = opts.usedOstBlocks.findIndex(function (item) { return item.name === type; });
            if (index === -1) {
                opts.usedOstBlocks.push({ name: type, count: 1 });
            }
            else {
                opts.usedOstBlocks[index].count++;
            }
        });
        // Display update select input
        Array.from(element.options).forEach(function (optionElement, optionIndex) {
            if (optionElement.value != "") {
                var usedOstBlockIndex = opts.usedOstBlocks.findIndex(function (e) { return e.name === optionElement.value; });
                // Reset
                var optionEl = element.options[optionIndex];
                optionEl.text = optionEl.text.replace(/^\(.*\)\s*/g, "");
                optionEl.removeAttribute("class");
                optionEl.removeAttribute("disabled");
                if (usedOstBlockIndex > -1) {
                    if (opts.usedOstBlocks[usedOstBlockIndex].count == 1) {
                        optionEl.innerHTML = "(&#10003;) " + optionEl.text;
                        optionEl.classList.add("gjs-select-option-ok");
                        optionEl.disabled = true;
                    }
                    else if (opts.usedOstBlocks[usedOstBlockIndex].count > 1) {
                        optionEl.innerHTML =
                            "(! " +
                                opts.usedOstBlocks[usedOstBlockIndex].count +
                                "&times;) " +
                                optionEl.text;
                        optionEl.classList.add("gjs-select-option-nok");
                        optionEl.disabled = true;
                    }
                }
            }
        });
    }
});


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry needs to be wrapped in an IIFE because it needs to be isolated against other modules in the chunk.
(() => {
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _blocks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blocks */ "./src/blocks.ts");
/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commands */ "./src/commands.ts");
/* harmony import */ var _panels__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./panels */ "./src/panels.ts");
/* harmony import */ var _traits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./traits */ "./src/traits.ts");
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components */ "./src/components.ts");
/* harmony import */ var _rte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rte */ "./src/rte.ts");
/* harmony import */ var _ostTranslations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ostTranslations */ "./src/ostTranslations.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};







var plugin = function (editor_1) {
    var args_1 = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args_1[_i - 1] = arguments[_i];
    }
    return __awaiter(void 0, __spreadArray([editor_1], args_1, true), void 0, function (editor, opts) {
        function isChildOfElement(element, tag) {
            while (element === null || element === void 0 ? void 0 : element.parentNode) {
                element = element.parentNode;
                if (element.tagName === tag)
                    return element;
            }
            return false;
        }
        function showOstToolbar(listItem) {
            var _a;
            var elPos = (listItem === null || listItem === void 0 ? void 0 : listItem.index()) || 0;
            var elLast = (_a = listItem === null || listItem === void 0 ? void 0 : listItem.parent()) === null || _a === void 0 ? void 0 : _a.getLastChild().index();
            var ostToolbar = document.querySelector(".gjs-ost-toolbar");
            if (ostToolbar != undefined) {
                ostToolbar.innerHTML = "";
                // Add clone button
                var cBtn = document.createElement("div");
                cBtn.innerHTML =
                    '<svg viewBox="0 0 24 24"><path fill="currentColor" d="M12 3a9 9 0 0 0 0 18 9 9 0 0 0 0-18zm-1.3 3.88h2.6v3.82h3.82v2.6H13.3v3.82h-2.6V13.3H6.88v-2.6h3.82z"/></svg>';
                cBtn.classList.add("gjs-ost-toolbar-item", "clone");
                cBtn.title = options.t9n.ostToolbarClone;
                cBtn.addEventListener("click", function () {
                    var _a;
                    (_a = listItem === null || listItem === void 0 ? void 0 : listItem.parent()) === null || _a === void 0 ? void 0 : _a.append(listItem === null || listItem === void 0 ? void 0 : listItem.clone(), { at: elPos + 1 });
                });
                ostToolbar.appendChild(cBtn);
                //Add delete button
                var dBtn = document.createElement("div");
                dBtn.innerHTML =
                    '<svg viewBox="0 0 24 24"><path fill="currentColor" d="M12 3a9 9 0 1 0 0 18 9 9 0 0 0 0-18zm5.12 7.7v2.6H6.88v-2.6z"/></svg>';
                dBtn.title = options.t9n.ostToolbarDelete;
                dBtn.classList.add("gjs-ost-toolbar-item", "del");
                if (elLast != 0) {
                    dBtn.addEventListener("click", function () {
                        listItem === null || listItem === void 0 ? void 0 : listItem.remove();
                        ostToolbar === null || ostToolbar === void 0 ? void 0 : ostToolbar.classList.remove("show");
                    });
                }
                else {
                    dBtn.classList.add("disable");
                }
                ostToolbar.appendChild(dBtn);
                // Add move up button
                var upBtn = document.createElement("div");
                upBtn.innerHTML =
                    '<svg viewBox="0 0 24 24"><path fill="currentColor" d="M1.9 20.75 12 3.25l10.1 17.5Z"/></svg>';
                upBtn.title = options.t9n.ostToolbarUp;
                upBtn.classList.add("gjs-ost-toolbar-item", "up");
                if (elPos > 0) {
                    upBtn.addEventListener("click", function () {
                        if (elPos && (listItem === null || listItem === void 0 ? void 0 : listItem.parent()) != undefined) {
                            var parent_1 = listItem.parent();
                            if (parent_1) {
                                listItem === null || listItem === void 0 ? void 0 : listItem.move(parent_1, { at: elPos - 1 });
                            }
                            editor.selectRemove(listItem);
                            editor.select(listItem);
                        }
                    });
                }
                else {
                    upBtn.classList.add("disable");
                }
                ostToolbar.appendChild(upBtn);
                // Add move down button
                var dwnBtn = document.createElement("div");
                dwnBtn.innerHTML =
                    '<svg viewBox="0 0 24 24"><path fill="currentColor" d="M22.4 3.25 12 20.75 1.6 3.25Z"/></svg>';
                dwnBtn.title = options.t9n.ostToolbarDown;
                dwnBtn.classList.add("gjs-ost-toolbar-item", "down");
                if (elPos != elLast) {
                    var toPos = elPos + 2;
                    if (elPos == elLast) {
                        toPos = 0;
                    }
                    dwnBtn.addEventListener("click", function () {
                        if (toPos && (listItem === null || listItem === void 0 ? void 0 : listItem.parent()) != undefined) {
                            var parent_2 = listItem.parent();
                            if (parent_2) {
                                listItem.move(parent_2, { at: toPos });
                            }
                            editor.selectRemove(listItem);
                            editor.select(listItem);
                        }
                    });
                }
                else {
                    dwnBtn.classList.add("disable");
                }
                ostToolbar.appendChild(dwnBtn);
                // Add show
                ostToolbar.classList.add("show");
            }
        }
        var config, options;
        if (opts === void 0) { opts = {}; }
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    config = editor.getConfig();
                    options = __assign({ blocks: [], block: function () { return ({}); }, cmdOpenImport: "gjs-open-import-template", cmdInlineHtml: "gjs-get-inlined-html", codeViewerTheme: "hopscotch", juiceOpts: {}, usedOstBlocks: [], inlineCss: true, showStylesOnChange: true, showTraitsOnLoad: true, showOutlineOnLoad: true, t9n: _ostTranslations__WEBPACK_IMPORTED_MODULE_6__.ostTrans }, opts);
                    // Change some config
                    config.devicePreviewMode = true;
                    (0,_components__WEBPACK_IMPORTED_MODULE_4__["default"])(editor, options);
                    (0,_traits__WEBPACK_IMPORTED_MODULE_3__["default"])(editor, options);
                    return [4 /*yield*/, (0,_commands__WEBPACK_IMPORTED_MODULE_1__["default"])(editor, options)];
                case 1:
                    _a.sent();
                    (0,_blocks__WEBPACK_IMPORTED_MODULE_0__["default"])(editor, options);
                    (0,_panels__WEBPACK_IMPORTED_MODULE_2__["default"])(editor, options);
                    return [4 /*yield*/, (0,_rte__WEBPACK_IMPORTED_MODULE_5__["default"])(editor, options)];
                case 2:
                    _a.sent();
                    // On load
                    editor.on("load", function () {
                        // Create ostendis toolbar
                        var tools = document.getElementById("gjs-tools");
                        var ostTools = document.createElement("div");
                        ostTools.classList.add("gjs-ost-toolbar");
                        tools === null || tools === void 0 ? void 0 : tools.append(ostTools);
                    });
                    // On selected components
                    editor.on("component:selected", function () {
                        var _a, _b;
                        var selected = editor.getSelected();
                        if (selected != undefined) {
                            selected.set({
                                draggable: false,
                                removable: false,
                                copyable: false,
                            });
                            if (selected.is("ulistitem")) {
                                showOstToolbar(selected);
                            }
                            else if (selected.isChildOf("ulistitem")) {
                                showOstToolbar(selected.closestType("ulistitem"));
                            }
                            else if (((_a = selected.getEl()) === null || _a === void 0 ? void 0 : _a.tagName) === "LI") {
                                //If list element is empty replace with placeholder text (M&E case:)
                                if (selected.components().length === 0 && !selected.get("content")) {
                                    var selectedPosition = selected.index();
                                    var newComponent = (_b = selected
                                        .parent()) === null || _b === void 0 ? void 0 : _b.append("<li>Text</li>", { at: selectedPosition });
                                    selected.remove();
                                    editor.select(newComponent);
                                    selected = editor.getSelected();
                                }
                                showOstToolbar(selected);
                            }
                            else if (isChildOfElement(selected.getEl(), "LI")) {
                                showOstToolbar(selected.closest("li"));
                            }
                        }
                    });
                    // On deselected components
                    editor.on("component:deselected", function () {
                        var ostToolbar = document.querySelector(".gjs-ost-toolbar");
                        ostToolbar === null || ostToolbar === void 0 ? void 0 : ostToolbar.classList.remove("show");
                    });
                    // On storage start
                    editor.on("storage:start", function () {
                        // Reset all Components
                        var getAllComponents = function (model, result) {
                            if (result === void 0) { result = []; }
                            result.push(model);
                            model.components().each(function (mod) { return getAllComponents(mod, result); });
                            return result;
                        };
                        var allComponents = getAllComponents(editor.DomComponents.getWrapper());
                        allComponents.forEach(function (compo) {
                            return compo.set({
                                draggable: true,
                                removable: true,
                                copyable: true,
                                toolbar: [
                                    {
                                        attributes: { class: "fa-solid fa-arrow-up" },
                                        command: "select-parent",
                                    },
                                    {
                                        attributes: { class: "fa-solid fa-arrows-up-down-left-right" },
                                        command: "tlb-move",
                                    },
                                    { attributes: { class: "fa-regular fa-copy" }, command: "tlb-clone" },
                                    { attributes: { class: "fa-solid fa-trash" }, command: "tlb-delete" },
                                ],
                            });
                        });
                    });
                    return [2 /*return*/];
            }
        });
    });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (plugin);

})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=grapesjs-preset-ostendis-simple.min.js.map